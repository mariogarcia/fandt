buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.0'
	}
}

apply plugin: 'java-library'
apply plugin: 'pmd'
apply plugin: 'jacoco'
apply plugin: 'org.junit.platform.gradle.plugin'

repositories {
    jcenter()
}

configurations {
    testAgent {
        transitive = false
    }
}

dependencies {
    api 'org.apache.commons:commons-math3:3.6.1'

    implementation 'com.google.guava:guava:22.0'
    implementation 'com.jayway.jsonpath:json-path:2.4.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.6.3'
    implementation 'com.mashape.unirest:unirest-java:1.4.9'

    testImplementation("org.junit.jupiter:junit-jupiter-api:5.0.0")
    testImplementation("commons-io:commons-io:2.5")
	testRuntime("org.junit.jupiter:junit-jupiter-engine:5.0.0")

    testAgent("org.jacoco:org.jacoco.agent:0.7.9:runtime")
}

tasks.withType(JavaExec) {
    if (it.name == 'junitPlatformTest') {
        doFirst {
            jvmArgs "-javaagent:${configurations.testAgent.singleFile}=destfile=${project.buildDir.name}/jacoco/test.exec"
        }
    }
}

pmd {
      ruleSets = [
        'java-android',
        'java-basic',
        'java-braces',
        'java-clone',
        'java-codesize',
        'java-comments',
        'java-controversial',
        'java-coupling',
        'java-design',
        'java-empty',
        'java-finalizers',
        'java-imports',
        'java-j2ee',
        'java-javabeans',
        'java-junit',
        'java-logging-jakarta-commons',
        'java-logging-java',
        'java-migrating',
        'java-naming',
        'java-optimizations',
        'java-strictexception',
        'java-strings',
        'java-sunsecure',
        'java-typeresolution',
        'java-unnecessary',
        'java-unusedcode'
        ]
    ignoreFailures = true
}
